// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class WolfPanicInfo : MonoBehaviour
{
    public TextAsset csv;

    void Start()
    {
        Load(csv);
    }
    public class Row
	{
		public string piggys;
		public string wolfSeconds;
		public string wolfPercentage;
		public string wolfAmount;
		public string speed;
		public string greed;
		public string panicChance;
		public string panicDuration;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.piggys = grid[i][0];
			row.wolfSeconds = grid[i][1];
			row.wolfPercentage = grid[i][2];
			row.wolfAmount = grid[i][3];
			row.speed = grid[i][4];
			row.greed = grid[i][5];
			row.panicChance = grid[i][6];
			row.panicDuration = grid[i][7];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_piggys(string find)
	{
		return rowList.Find(x => x.piggys == find);
	}
	public List<Row> FindAll_piggys(string find)
	{
		return rowList.FindAll(x => x.piggys == find);
	}
	public Row Find_wolfSeconds(string find)
	{
		return rowList.Find(x => x.wolfSeconds == find);
	}
	public List<Row> FindAll_wolfSeconds(string find)
	{
		return rowList.FindAll(x => x.wolfSeconds == find);
	}
	public Row Find_wolfPercentage(string find)
	{
		return rowList.Find(x => x.wolfPercentage == find);
	}
	public List<Row> FindAll_wolfPercentage(string find)
	{
		return rowList.FindAll(x => x.wolfPercentage == find);
	}
	public Row Find_wolfAmount(string find)
	{
		return rowList.Find(x => x.wolfAmount == find);
	}
	public List<Row> FindAll_wolfAmount(string find)
	{
		return rowList.FindAll(x => x.wolfAmount == find);
	}
	public Row Find_speed(string find)
	{
		return rowList.Find(x => x.speed == find);
	}
	public List<Row> FindAll_speed(string find)
	{
		return rowList.FindAll(x => x.speed == find);
	}
	public Row Find_greed(string find)
	{
		return rowList.Find(x => x.greed == find);
	}
	public List<Row> FindAll_greed(string find)
	{
		return rowList.FindAll(x => x.greed == find);
	}
	public Row Find_panicChance(string find)
	{
		return rowList.Find(x => x.panicChance == find);
	}
	public List<Row> FindAll_panicChance(string find)
	{
		return rowList.FindAll(x => x.panicChance == find);
	}
	public Row Find_panicDuration(string find)
	{
		return rowList.Find(x => x.panicDuration == find);
	}
	public List<Row> FindAll_panicDuration(string find)
	{
		return rowList.FindAll(x => x.panicDuration == find);
	}

}